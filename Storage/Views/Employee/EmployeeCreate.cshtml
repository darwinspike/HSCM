@model Storage.Models.Employee.EmployeeViewModels

@Scripts.Render("~/bundles/jqueryval")
<h1>@ViewBag.Title</h1>
<h3>@ViewBag.Message</h3>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Employee.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Employee.firstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employee.firstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Employee.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Employee.lastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employee.lastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Employee.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Employee.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employee.email, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.Label("productType", "User", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Employee.idUser, new SelectList(Model.User, "id", "user", 0), "Please Select Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Employee.idUser, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("productType", "User Type", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Employee.idUserType, new SelectList(Model.UserType, "id", "name", 0), "Please Select Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Employee.idUserType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Employee.id)
                @Html.HiddenFor(model => model.Employee.upDateDate)
                @Html.HiddenFor(model => model.Employee.createDate)
                @Html.HiddenFor(model => model.Employee.state)
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
