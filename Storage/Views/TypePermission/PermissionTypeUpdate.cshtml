@model Storage.Models.User.TypePermissionViewModels


<h1>@ViewBag.Title</h1>
<h3>@ViewBag.Message</h3>
<hr />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.TypePermission.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TypePermission.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypePermission.name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TypePermission.detail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TypePermission.detail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypePermission.detail, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.TypePermission.id)
                @Html.HiddenFor(model => model.TypePermission.upDateDate)
                @Html.HiddenFor(model => model.TypePermission.createDate)
                @Html.HiddenFor(model => model.TypePermission.numberLevel)
                @Html.HiddenFor(model => model.TypePermission.state)
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}
